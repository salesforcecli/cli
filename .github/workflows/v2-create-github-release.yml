name: v2-create-github-release

# ****************
# ***** NOTE *****
# ****************
# Temporary workflow to create nightly prereleases on the v2 branch as 'beta'
# Once v2 is GA, this workflow will be removed and the v2 branch will be deleted

on:
  pull_request:
    branches:
      - v2
    types:
      - closed

jobs:
  # This job determines the validates the channel that will be released.
  validate-channel:
    # Must also be merged=true (this ignores PRs that are closed without merging)
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      # Checkout needed to validate prerelease version in package.json
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Get prerelease from package.json
        id: check-prerelease
        uses: salesforcecli/github-workflows/.github/actions/getPreReleaseTag@main

      - name: Validate prerelease tag
        # Fail if:
        # - version in the package.json is not a prerelease tag
        # - prerelease tag in package.json does not match 'beta'
        if: (!steps.check-prerelease.outputs.tag || steps.check-prerelease.outputs.tag != 'beta')
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Prerelease requires a dist tag name in your package.json like beta in 2.0.0-beta.9')

  create-tag-and-release-in-github:
    needs: [validate-channel]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@d360fad3a42feca6462f72c97c165d60a02d4bf2
        # overriding some of the basic behaviors to just get the changelog
        with:
          git-user-name: svc-cli-bot
          git-user-email: svc_cli_bot@salesforce.com
          github-token: ${{ secrets.SVC_CLI_BOT_GITHUB_TOKEN }}
          output-file: false
          # always do the release, even if there are no semantic commits
          skip-on-empty: false
          # pjson version was already updated by the "cli:release:build" script, so don't base behavior on these commits
          skip-version-file: true
          # avoids the default `v` so all the later actions don't have to remove it
          tag-prefix: ''
      - uses: notiz-dev/github-action-json-property@2192e246737701f108a4571462b76c75e7376216
        id: packageVersion
        with:
          path: 'package.json'
          prop_path: 'version'
      - name: Create Github Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SVC_CLI_BOT_GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.packageVersion.outputs.prop }}
          release_name: ${{ steps.packageVersion.outputs.prop }}
          prerelease: true # NOTE: default to true for the v2 branch
          # This channel value is read from the Github Release body to determine the channel. Be cautious editing
          # NOTES: Again, here we are defaulting to 'beta' for the v2 branch
          body: |
            !! Release as beta !!

            Change log:
            ${{ steps.changelog.outputs.clean_changelog }}
