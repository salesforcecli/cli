name: rc tag/release

on:
  pull_request:
    branches: [main]
    types:
      - closed

jobs:
  mergedReleaseBranch:
    # very specific PRs
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.title, 'Release') && endsWith(github.event.pull_request.title, 'as latest-rc')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@d360fad3a42feca6462f72c97c165d60a02d4bf2
        # overriding some of the basic behaviors to just get the changelog
        with:
          git-user-name: SF-CLI-BOT
          git-user-email: alm-cli@salesforce.com
          github-token: ${{ secrets.SF_CLI_BOT_GITHUB_TOKEN }}
          output-file: false
          # always do the release, even if there are no semantic commits
          skip-on-empty: false
          # pjson version was already updated in the RC branch, so don't base behavior on these commits
          skip-version-file: true
          # avoids the default `v` so all the later actions don't have to remove it
          tag-prefix: ''
      - uses: notiz-dev/github-action-json-property@2192e246737701f108a4571462b76c75e7376216
        id: packageVersion
        with:
          path: 'package.json'
          prop_path: 'version'
      - name: Create Github Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.SF_CLI_BOT_GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.packageVersion.outputs.prop }}
          release_name: ${{ steps.packageVersion.outputs.prop }}
          body: ${{ steps.changelog.outputs.clean_changelog }}
