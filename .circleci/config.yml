---
version: 2.1
orbs:
  release-management: salesforce/npm-release-management@4

jobs:
  maybe-halt:
    docker:
      - image: node:latest
    steps:
      - release-management/install-sf-release
      - release-management/halt-workflow-if-not-releasable

  change-case-start:
    docker:
      - image: node:latest
    steps:
      - release-management/install-change-case-mgmt
      - release-management/change-case-create

  # There are two pack jobs:
  # - test-pack-tarballs to run on every branch *other than main*
  # - pack-and-upload-tarballs to run only on main
  # The persist_to_workspace feature would allow use to have a
  # pack-tarballs and an upload-tarballs job, but the perf gains
  # is minimal since the workspace is almost a GB to attach.
  test-pack-tarballs:
    docker:
      - image: node:lts
    resource_class: xlarge
    steps:
      - checkout
      - run: |
          apt-get update
          apt-get install -y p7zip-full
      - restore_cache:
          keys:
            - v3-npm-{{checksum "yarn.lock"}}
      - run: yarn install
      - run: yarn pack:tarballs
      - run: yarn pack:verify
      - run: yarn test:smoke-unix

  pack-and-upload-tarballs: &pack-and-upload-tarballs
    docker:
      - image: node:14.17.1
    resource_class: xlarge
    steps:
      - checkout
      - run: git fetch origin && git pull
      - run: |
          apt-get update
          apt-get install -y p7zip-full
      - restore_cache:
          keys:
            - v3-npm-{{checksum "yarn.lock"}}
      - run: yarn install
      - run: yarn pack:tarballs
      - run: yarn pack:verify
      - run: yarn test:smoke-unix
      - run: yarn upload:tarballs
      - run:
          name: Promote to stable channel
          command: |
            VERSION=$(node -p -e "require('./package.json').version")
            SHA=$(git rev-parse --short HEAD)
            yarn promote --version $VERSION --sha $SHA --channel stable --max-age 300 --indexes

  pack-and-upload-macos-installer:
    macos:
      xcode: 12.5.1
    steps:
      - checkout
      - run: git fetch origin && git pull
      - run: yarn install
      - run: yarn pack:macos
      - run: yarn upload:macos
      - run:
          name: Promote macos installer to stable channel
          command: |
            VERSION=$(node -p -e "require('./package.json').version")
            SHA=$(git rev-parse --short HEAD)
            yarn promote --version $VERSION --sha $SHA --channel stable --max-age 300 --macos --indexes

  pack-and-upload-windows-installer:
    <<: *pack-and-upload-tarballs
    steps:
      - checkout
      - run: git fetch origin && git pull
      - restore_cache:
          keys:
            - v3-npm-{{checksum "yarn.lock"}}
      - run: |
          apt-get update
          apt-get install -y p7zip-full \
            osslsigncode \
            nsis
      - run: yarn install
      - run: |
          echo $WINDOWS_SIGNING_KEY | base64 --decode > /tmp/windows-signing.pfx
      - run: yarn pack:win
      - run: yarn upload:win
      - run:
          name: Promote windows installer to stable channel
          command: |
            VERSION=$(node -p -e "require('./package.json').version")
            SHA=$(git rev-parse --short HEAD)
            yarn promote --version $VERSION --sha $SHA --channel stable --max-age 300 --win --indexes

  promote-verify:
    docker:
      - image: node:latest
    steps:
      - checkout
      - run: yarn install
      - run: yarn promote:verify

  close-CTC:
    docker:
      - image: node:latest
    steps:
      - release-management/install-change-case-mgmt
      - run:
          when: on_fail
          name: Close CTC case as Not Implemented
          command: |
            if [ -z "${SF_CHANGE_CASE_SFDX_AUTH_URL}" ] || [ -z "${SF_CHANGE_CASE_TEMPLATE_ID}" ] || [ -z "${SF_CHANGE_CASE_SCHEDULE_BUILD}" ]; then
                echo "Environment not configured for CTC"
            else
                sfchangecase close --location "https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME" --status "Not Implemented"
            fi
      - run:
          name: All Good! Close CTC case/implementations
          when: on_success
          command: |
            if [ -z "${SF_CHANGE_CASE_SFDX_AUTH_URL}" ] || [ -z "${SF_CHANGE_CASE_TEMPLATE_ID}" ] || [ -z "${SF_CHANGE_CASE_SCHEDULE_BUILD}" ]; then
                echo "Environment not configured for CTC"
            else
                sfchangecase close --location "https://github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME"
            fi

workflows:
  version: 2
  test-and-release:
    jobs:
      - release-management/validate-pr:
          filters:
            branches:
              ignore: main
      - release-management/test-sf-inclusion:
          name: test-include-sf-in-sdx
      - test-pack-tarballs:
          filters:
            branches:
              ignore: main # test the pack on PRs, but main will do pack-and-upload-tarballs
      - maybe-halt:
          filters:
            branches:
              only: main
      - change-case-start:
          context: CLI_CTC
          requires:
            - test-include-sf-in-sdx
          filters:
            branches:
              only: main
      - release-management/release-package:
          node_version: '14'
          tag: latest
          github-release: true
          requires:
            - change-case-start
            - test-include-sf-in-sdx
          filters:
            branches:
              only: main
          pre-job-steps:
            - release-management/pin-dependencies:
                tag: latest
      - pack-and-upload-tarballs:
          filters:
            branches:
              only:
                - main
          requires:
            - release-management/release-package
      - pack-and-upload-macos-installer:
          filters:
            branches:
              only:
                - main
          requires:
            - release-management/release-package
            - pack-and-upload-tarballs
      - pack-and-upload-windows-installer:
          filters:
            branches:
              only:
                - main
          requires:
            - release-management/release-package
            - pack-and-upload-tarballs
      - promote-verify:
          requires:
            - pack-and-upload-tarballs
            - pack-and-upload-macos-installer
            - pack-and-upload-windows-installer
      - close-CTC:
          context: CLI_CTC
          requires:
            - promote-verify
  test-pack-and-include:
    triggers:
      - schedule:
          cron: 0 0 * * *
          filters:
            branches:
              only:
                - main
    jobs:
      - release-management/test-sf-inclusion
      - test-pack-tarballs
  dependabot-automerge:
    triggers:
      - schedule:
          cron: '0 2,5,8,11 * * *'
          filters:
            branches:
              only:
                - main
    jobs:
      - release-management/dependabot-automerge:
          skip-ci: true
